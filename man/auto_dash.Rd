% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_dash.R
\name{auto_dash}
\alias{auto_dash}
\title{Generate a dashboard of `ggplot` objects}
\usage{
auto_dash(
  data,
  num_plots = 6,
  custom_description = "",
  dash_model = "gpt-4",
  code_model = "gpt-4",
  temperature = 0.1,
  num_design_attempts = 2,
  num_code_attempts = 5,
  max_cols = 10,
  save_messages = FALSE,
  save_dir = "sullyplot_messages",
  save_name = "auto_dash",
  max_tokens = 16384
)
}
\arguments{
\item{data}{The input data to create a dashboard from, can be either the path to a file (must be .csv or .xlsx) or a data frame.}

\item{num_plots}{The number of plots in your dashboard. Default is 6.}

\item{custom_description}{An optional description to describe the custom dashboard you want.}

\item{dash_model}{The name of the language model to use for designing the dashboard, in the case of azure openai this is the deployment_id. Default 'gpt-4'.}

\item{code_model}{The name of the language model to use for coding individual plots, in the case of azure openai this is the deployment_id. Default 'gpt-4'.}

\item{temperature}{The temperature value for the language model designing the dashboard (does not affect code generation). Default is 0.1.}

\item{num_design_attempts}{The number of iterations to improve on the dashboard design. Default is 2.}

\item{num_code_attempts}{The maximum number of attempts to code your plot before failing - can take less if no errors are encountered in code generation. Default is 5.}

\item{max_cols}{The maximum number of columns the LLM can 'see'. If more columns are provided in the file they will be sorted and the columns with the least NA and most information will be selected. Default is 10.}

\item{save_messages}{Whether to save chat messages and responses for each dashboard generation step, useful for finetuning. Default is false.}

\item{save_dir}{The directory to save chat messages in.}

\item{save_name}{The name to save chat messages under (will be suffixed for each step). Default is "auto_dash".}
}
\value{
The list of `ggplot` objects representing the dashboard.
}
\description{
This function automatically generates a dashboard of `ggplot` objects from your input file.
It allows you to specify the number of plots and a custom description of your dashboard.
}
\examples{
\donttest{
   # Basic usage on the iris dataset
   all_plots <- sullyplot::auto_dash(system.file("examples/example_data/iris.csv", package = "sullyplot"), 
                                     num_plots=4,
                                     num_design_attempts=1,
                                     num_code_attempts=5,
                                     code_model = "gpt-4",
                                     dash_model = "gpt-4")

   # With a custom description for specific plots
   description <- "Two box plots for lengths and widths (use two y axes per plot to show petal and sepal lengths/widths together), and 2 scatter plots of lengths vs widths. All should be grouped by variety."
   all_plots <- sullyplot::auto_dash(system.file("examples/example_data/iris.csv", package = "sullyplot"), 
                                    num_plots=4,
                                    num_design_attempts=1,
                                    num_code_attempts=5,
                                    code_model = "gpt-4",
                                    dash_model = "gpt-4",
                                    custom_description=description)
}

}
